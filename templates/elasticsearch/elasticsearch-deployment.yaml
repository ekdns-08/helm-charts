apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.names.fullname" . }}
  namespace: {{ .Values.namespaceOverride }}
  labels:
    app: {{ .Values.commonLabels.app }}
  annotations:
    kubernetes.io/change-cause: {{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
spec:
  replicas: {{ .Values.replicaCount }}
  progressDeadlineSeconds: 120
  revisionHistoryLimit: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: {{ .Values.commonLabels.app }}
  template:
    metadata:
      labels:
        app: {{ .Values.commonLabels.app }}
    spec:
      containers:
      - name: core
        image: {{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.containerPorts.amqp }}
          protocol: TCP
        resources:
          requests:
            cpu: 200m
            memory: 1200Mi
        livenessProbe:
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
          successThreshold: 1
          httpGet:
            path: {{ .Values.livenessProbe.path }}
            port: {{ .Values.containerPorts.amqp }}
        readinessProbe:
          initialDelaySeconds: 20
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
          successThreshold: 1
          httpGet:
            path: {{ .Values.readinessProbe.path }}
            port: {{ .Values.containerPorts.amqp }}
        startupProbe:
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 60
          successThreshold: 1
          httpGet:
            path: {{ .Values.startupProbe.path }}
            port: {{ .Values.containerPorts.amqp }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecrets[0] }}
